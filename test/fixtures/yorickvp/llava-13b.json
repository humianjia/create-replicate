{
  "cover_image_url": "https://tjzk.replicate.delivery/models_models_cover_image/2c5dbfff-209d-4ab5-a294-b3e5e56105c0/dalle3.jpg",
  "created_at": "2023-10-09T16:27:51.777748Z",
  "default_example": {
    "completed_at": "2023-10-10T12:43:58.049663Z",
    "created_at": "2023-10-10T12:39:54.406394Z",
    "error": null,
    "id": "gav7xf3bxlcjrql3iyidcu7qgu",
    "input": {
      "image": "https://replicate.delivery/pbxt/JfvBi04QfleIeJ3ASiBEMbJvhTQKWKLjKaajEbuhO1Y0wPHd/view.jpg",
      "prompt": "Are you allowed to swim here?",
      "max_tokens": 1024,
      "temperature": 0.2
    },
    "logs": null,
    "metrics": {
      "predict_time": 2.31179
    },
    "output": "Yes, you are allowed to swim in the lake near the pier.",
    "started_at": "2023-10-10T12:43:55.737873Z",
    "status": "succeeded",
    "urls": {
      "get": "https://api.replicate.com/v1/predictions/gav7xf3bxlcjrql3iyidcu7qgu",
      "cancel": "https://api.replicate.com/v1/predictions/gav7xf3bxlcjrql3iyidcu7qgu/cancel"
    },
    "model": "yorickvp/llava-13b",
    "version": "c293ca6d551ce5e74893ab153c61380f5bcbd80e02d49e08c582de184a8f6c83",
    "webhook_completed": null
  },
  "description": "Visual instruction tuning towards large language and vision models with GPT-4 level capabilities",
  "github_url": "https://github.com/haotian-liu/LLaVA",
  "latest_version": {
    "id": "e272157381e2a3bf12df3a8edd1f38d1dbd736bbb7437277c8b34175f8fce358",
    "created_at": "2023-11-21T10:19:14.945570Z",
    "cog_version": "0.9.0-beta10",
    "openapi_schema": {
      "info": {
        "title": "Cog",
        "version": "0.1.0"
      },
      "paths": {
        "/": {
          "get": {
            "summary": "Root",
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "title": "Response Root  Get"
                    }
                  }
                },
                "description": "Successful Response"
              }
            },
            "operationId": "root__get"
          }
        },
        "/shutdown": {
          "post": {
            "summary": "Start Shutdown",
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "title": "Response Start Shutdown Shutdown Post"
                    }
                  }
                },
                "description": "Successful Response"
              }
            },
            "operationId": "start_shutdown_shutdown_post"
          }
        },
        "/predictions": {
          "post": {
            "summary": "Predict",
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionResponse"
                    }
                  }
                },
                "description": "Successful Response"
              },
              "422": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/HTTPValidationError"
                    }
                  }
                },
                "description": "Validation Error"
              }
            },
            "parameters": [
              {
                "in": "header",
                "name": "prefer",
                "schema": {
                  "type": "string",
                  "title": "Prefer"
                },
                "required": false
              }
            ],
            "description": "Run a single prediction on the model",
            "operationId": "predict_predictions_post",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PredictionRequest"
                  }
                }
              }
            }
          }
        },
        "/health-check": {
          "get": {
            "summary": "Healthcheck",
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "title": "Response Healthcheck Health Check Get"
                    }
                  }
                },
                "description": "Successful Response"
              }
            },
            "operationId": "healthcheck_health_check_get"
          }
        },
        "/predictions/{prediction_id}": {
          "put": {
            "summary": "Predict Idempotent",
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PredictionResponse"
                    }
                  }
                },
                "description": "Successful Response"
              },
              "422": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/HTTPValidationError"
                    }
                  }
                },
                "description": "Validation Error"
              }
            },
            "parameters": [
              {
                "in": "path",
                "name": "prediction_id",
                "schema": {
                  "type": "string",
                  "title": "Prediction ID"
                },
                "required": true
              },
              {
                "in": "header",
                "name": "prefer",
                "schema": {
                  "type": "string",
                  "title": "Prefer"
                },
                "required": false
              }
            ],
            "description": "Run a single prediction on the model (idempotent creation).",
            "operationId": "predict_idempotent_predictions__prediction_id__put",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/PredictionRequest"
                      }
                    ],
                    "title": "Prediction Request"
                  }
                }
              },
              "required": true
            }
          }
        },
        "/predictions/{prediction_id}/cancel": {
          "post": {
            "summary": "Cancel",
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                    }
                  }
                },
                "description": "Successful Response"
              },
              "422": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/HTTPValidationError"
                    }
                  }
                },
                "description": "Validation Error"
              }
            },
            "parameters": [
              {
                "in": "path",
                "name": "prediction_id",
                "schema": {
                  "type": "string",
                  "title": "Prediction ID"
                },
                "required": true
              }
            ],
            "description": "Cancel a running prediction",
            "operationId": "cancel_predictions__prediction_id__cancel_post"
          }
        }
      },
      "openapi": "3.0.2",
      "components": {
        "schemas": {
          "Input": {
            "type": "object",
            "title": "Input",
            "required": [
              "image",
              "prompt"
            ],
            "properties": {
              "image": {
                "type": "string",
                "title": "Image",
                "format": "uri",
                "x-order": 0,
                "description": "Input image"
              },
              "top_p": {
                "type": "number",
                "title": "Top P",
                "default": 1,
                "maximum": 1,
                "minimum": 0,
                "x-order": 2,
                "description": "When decoding text, samples from the top p percentage of most likely tokens; lower to ignore less likely tokens"
              },
              "prompt": {
                "type": "string",
                "title": "Prompt",
                "x-order": 1,
                "description": "Prompt to use for text generation"
              },
              "max_tokens": {
                "type": "integer",
                "title": "Max Tokens",
                "default": 1024,
                "minimum": 0,
                "x-order": 4,
                "description": "Maximum number of tokens to generate. A word is generally 2-3 tokens"
              },
              "temperature": {
                "type": "number",
                "title": "Temperature",
                "default": 0.2,
                "minimum": 0,
                "x-order": 3,
                "description": "Adjusts randomness of outputs, greater than 1 is random and 0 is deterministic"
              }
            }
          },
          "Output": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Output",
            "x-cog-array-type": "iterator",
            "x-cog-array-display": "concatenate"
          },
          "Status": {
            "enum": [
              "starting",
              "processing",
              "succeeded",
              "canceled",
              "failed"
            ],
            "type": "string",
            "title": "Status",
            "description": "An enumeration."
          },
          "WebhookEvent": {
            "enum": [
              "start",
              "output",
              "logs",
              "completed"
            ],
            "type": "string",
            "title": "WebhookEvent",
            "description": "An enumeration."
          },
          "ValidationError": {
            "type": "object",
            "title": "ValidationError",
            "required": [
              "loc",
              "msg",
              "type"
            ],
            "properties": {
              "loc": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "integer"
                    }
                  ]
                },
                "title": "Location"
              },
              "msg": {
                "type": "string",
                "title": "Message"
              },
              "type": {
                "type": "string",
                "title": "Error Type"
              }
            }
          },
          "PredictionRequest": {
            "type": "object",
            "title": "PredictionRequest",
            "properties": {
              "id": {
                "type": "string",
                "title": "Id"
              },
              "input": {
                "$ref": "#/components/schemas/Input"
              },
              "webhook": {
                "type": "string",
                "title": "Webhook",
                "format": "uri",
                "maxLength": 65536,
                "minLength": 1
              },
              "created_at": {
                "type": "string",
                "title": "Created At",
                "format": "date-time"
              },
              "output_file_prefix": {
                "type": "string",
                "title": "Output File Prefix"
              },
              "webhook_events_filter": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebhookEvent"
                },
                "default": [
                  "start",
                  "output",
                  "logs",
                  "completed"
                ]
              }
            }
          },
          "PredictionResponse": {
            "type": "object",
            "title": "PredictionResponse",
            "properties": {
              "id": {
                "type": "string",
                "title": "Id"
              },
              "logs": {
                "type": "string",
                "title": "Logs",
                "default": ""
              },
              "error": {
                "type": "string",
                "title": "Error"
              },
              "input": {
                "$ref": "#/components/schemas/Input"
              },
              "output": {
                "$ref": "#/components/schemas/Output"
              },
              "status": {
                "$ref": "#/components/schemas/Status"
              },
              "metrics": {
                "type": "object",
                "title": "Metrics"
              },
              "version": {
                "type": "string",
                "title": "Version"
              },
              "created_at": {
                "type": "string",
                "title": "Created At",
                "format": "date-time"
              },
              "started_at": {
                "type": "string",
                "title": "Started At",
                "format": "date-time"
              },
              "completed_at": {
                "type": "string",
                "title": "Completed At",
                "format": "date-time"
              }
            }
          },
          "HTTPValidationError": {
            "type": "object",
            "title": "HTTPValidationError",
            "properties": {
              "detail": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ValidationError"
                },
                "title": "Detail"
              }
            }
          }
        }
      }
    }
  },
  "license_url": "https://ai.meta.com/llama/license/",
  "name": "llava-13b",
  "owner": "yorickvp",
  "paper_url": "https://arxiv.org/abs/2310.03744",
  "run_count": 3596716,
  "url": "https://replicate.com/yorickvp/llava-13b",
  "visibility": "public"
}
